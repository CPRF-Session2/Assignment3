Jinoo Hong

1.  Determine the complexity of the following code snippets: 

    a.  
    ``````C
      int sum = 0;
      for(i = 0; i < n; i++)
              sum++;
    ```
O(n)
    
    b.  
    ``` C
    sum = 0;
    for( i = 0; i < n; i++ )
        sum++;
    for( i = 0; i < n; i++ )
        for( j = 0; j < n; j++ )
            sum++;
    ```
O(2n)

    c.  
    ``` C
    for(i=0;i<n;i+=2) {
  	  for(j=1;j<=n;j*=2) {
  		  printf(“%d,%d\n”,i,j);
	    }
    }
    ```
O(n^2)

2.  The following code should prompt the user for input. If that input is a number between 1 and 4, inclusive, then it should print the number back just once and prompt the user for another number. Does the following code do so? And if not, what does it do instead and how can you fix this to do the needed task? 
 ```C
 #include <stdio.h>
1 int main () {
2     int n = 1; 
3     while (n > 0 && n < 5) { 
4 	    printf(“%d”, “Enter number:”);
5 	    scanf(“%d”, &n);
6	  	switch (n) {
7	  		case (1):
8	  			printf(“%d”, n);
9	  			break;
10	  		case (2):
11	  			printf(“%d”, n);
12	  			break;
13	  		case (3):
14	  			printf(“%d”, n);
15	  			break;
16	  		case(4):
17	  			printf(“%d”, n);
18	  			break;
19	  	}
}
21 return 0; 
}
 ```
Line 4 should be printf("Enter number:");
The code doesn't prompt the user for another number because it "breaks" the while loop. You can fix this by replacing "break" with "continue" because it will bring it to the beginning of the next iteration of the loop.

3.  Is the following code snippet valid? If so, what information or assumptions must be given for it to be valid? If not, why not?
    ``` C
    for(;i < 1000;i*=2) {
        printf(“%d\n”);
    }
    ```
Invalid
For loop doesnt have an initialial starting value of variable. Also, printf function is missing the variable or value to print instead of "%d".

